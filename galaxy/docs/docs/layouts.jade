.doc#layouts(g="center lg-container lg-margin-t xlg-margin-b")
	
	div(g="md-container")
		h2#layouts The Grid, Explained
		p Good design is consistent. To start understanding the grid system, every page is made up of rows, and each row is made of 12 columns. To start a new row simply add a &lt;section> tag. To add columns simply prefix each child element in the row with a value from 1 to 12.

		.example
			section
				div(g="3") 3
				div(g="9") 9
			pre.language-markup
				code &lt;section>
				code     &lt;div g="3">3&lt;div>
				code     &lt;div g="9">9&lt;div>
				code &lt;/section>

		h3 Flexbox
		
		p Flexbox is a CSS layout that lets us distribute spacing across a row, as opposed to defining fixed widths for each element. You can distribute spacing evenly between child elements or around with g="<strong>between</strong>" and g="<strong>around</strong>", respectively.
		.example
			section(g="around" style="background: #f2f2f2")
				div Around
				div Around
				div Around
			pre.language-markup
				code &lt;section g="around">
				code     &lt;div>Half&lt;div>
				code     &lt;div>Half&lt;div>
				code &lt;/section>
			section(g="between" style="background: #f2f2f2")
				div Between
				div Between
				div Between
			pre.language-markup
				code &lt;section g="between">
				code     &lt;div>Half&lt;div>
				code     &lt;div>Half&lt;div>
				code &lt;/section>

		h2 Containers

		p Having a set of resuable containers is a great way to create consistent and reusable max-widths. Containers will make sure that nested elements stay within it's max-width.

		section.example.containers
			div(g="centered md-container") md-container

		h2 Positioning

		p Sizing components is as easy as adding left, right, center (center container only) or centered (center everything including text) to your element's g attribute.

		p An element nested in a <strong>&lt;section></strong> can be centered vertically and horizontally.

		.example
			section(style="background: #f2f2f2" g="md-padding-tb")
				div(g="centered") centered

		h2 Resizing
		p You can add margins for whitespace or padding to resize an element.

		pre.language-markup
			code &lt;-- Medium padding all around -->
			code &lt;div g="md-margin">
			code &lt;div g="md-margin-tb"> &lt;-- medium margin on top and bottom -->
			code &lt;-- Large padding all around -->
			code &lt;div g="lg-padding">
			code &lt;div g="lg-margin-l"> &lt;-- Large padding on the left side -->

		p Optionally, you can constrain the padding or margin to only one direction or both directions in the example above.

		.banner.next(g="between sm-padding" style="cursor: pointer")
			section.loading(g="centered lg-container")
				h3 Write CSS faster with SCSS <img src="/media/arrow-right.svg" style="height: 17px;">